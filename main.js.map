{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/input-data/input-data.component.css","webpack:///./src/app/input-data/input-data.component.html","webpack:///./src/app/input-data/input-data.component.ts","webpack:///./src/app/interfaces/RentDataItem.ts","webpack:///./src/app/services/rent-data-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,mEAAmE,+H;;;;;;;;;;;ACAnE,8EAA8E,SAAS,+I;;;;;;;;;;;;;;;;;ACA7C;AAO1C;IALA;QAME,UAAK,GAAG,YAAY,CAAC;IACvB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACgC;AACR;AACA;AAEf;AAqC7B;AAC3B;GACG;AAqBH;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,mFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,4FAAuB;gBACvB,qEAAmB;gBACnB,gEAAc;gBACd,oEAAgB;gBAChB,gEAAc;gBACd,oEAAkB;gBAClB,+DAAa;aACd;YACD,SAAS,EAAE,CAAC,mFAAe,mBAAkB,CAAC;YAE9C,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrEtB,iCAAiC,uBAAuB,uBAAuB,kBAAkB,KAAK,6BAA6B,kBAAkB,KAAK,6CAA6C,+f;;;;;;;;;;;ACAvM,iOAAiO,kBAAkB,uBAAuB,wBAAwB,+DAA+D,eAAe,wGAAwG,OAAO,EAAE,gFAAgF,eAAe,EAAE,GAAG,oBAAoB,GAAG,oCAAoC,EAAE,GAAG,wCAAwC,+PAA+P,cAAc,0GAA0G,eAAe,8LAA8L,kBAAkB,2EAA2E,wBAAwB,qLAAqL,oCAAoC,gEAAgE,qCAAqC,uLAAuL,iCAAiC,wDAAwD,mCAAmC,wIAAwI,2BAA2B,qG;;;;;;;;;;;;;;;;;;;ACAjkE;AAIe;AACd;AAS1D;IAiBE,4BAAoB,gBAAiC,8CAA6C;QAA9E,qBAAgB,GAAhB,gBAAgB,CAAiB;QANrD,qBAAgB,GAAG,CAAC,UAAU,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IAMgC,CAAC;IAEvG,qCAAQ,GAAR;QAAA,iBAYC;QAVC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAC3C,cAAI,IAAI,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CACxB;QACH,qDAAqD;QACrD,iCAAiC;QACjC,KAAK;QACL,gEAAgE;QAEhE,8CAA8C;IAEhD,CAAC;IACK,uCAAU,GAAhB;;;;;;KAEC;IACD,oCAAO,GAAP,UAAQ,KAAa;QACnB,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACrB,IAAM,MAAM,GAAG,EAAE,CAAC;QAElB,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAEzC,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,IAAI,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;aAClC;YAED,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAElB;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,uCAAU,GAAV,UAAW,KAAa;QACtB,YAAY;QADd,iBAqCC;QAlCC,8CAA8C;QAE9C,2BAA2B;QAC3B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAEjD,mCAAmC;QACnC,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAE1E,8DAA8D;QAE9D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,qEAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,EAA9E,CAA8E,CAAC,CAAC;QAEtH,6CAA6C;QAE7C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,IAAI,KAAI,CAAC,eAAe;YAClF,CAAC,CAAC,CAAC,MAAM,IAAI,KAAI,CAAC,eAAe,IAAI,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,EADZ,CACY,CAAC,CAAC;QAEhE,qBAAqB;QAErB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI;aAC3B,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG,IAAK,UAAG,GAAG,GAAG,EAAT,CAAS,EAAE,CAAC,CAAC;YACxD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG,IAAK,UAAG,GAAG,GAAG,EAAT,CAAS,EAAE,CAAC,CAAC,CAAC;QAIhF,6CAA6C;QAC7C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB;aACzC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,SAAS,IAAI,CAAC,CAAC,MAAM,IAAI,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY;YACjF,CAAC,CAAC,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,YAAY,CAAC,EAD3C,CAC2C,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG,IAAK,UAAG,GAAG,GAAG,EAAT,CAAS,EAAE,CAAC,CAAC,CAAC;QAC5F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;QAE7D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACD,+CAAkB,GAAlB,UAAmB,MAAY,EAAE,YAAoB;QAEpD,uBAAuB;QAEtB,IAAM,GAAG,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QAE7B,IAAM,WAAW,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACvF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,WAAW,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,GAAG,YAAY,GAAG,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC;IACtD,CAAC;IA1FD;QADC,2DAAK,EAAE;;uDACK;IAfF,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kHAA0C;;SAE3C,CAAC;+EAkBsC,mFAAe,8CAA6C;OAjBvF,kBAAkB,CA4G9B;IAAD,yBAAC;CAAA;AA5G8B;;;;;;;;;;;;;ACd/B;AAAA;AAAA;IAOE,sBAAY,QAAgB,EAC1B,YAAoB,EACpB,QAAgB,EAChB,MAAc;QACd,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,KAAK,GAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,MAAM,KAAK,EAAE,EAAE;YACjB,IAAI,KAAK,GAAS,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;YACnC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;IAGH,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACxB0C;AAC0B;AAKrE;IAGE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAD5B,SAAI,GAAG,6BAA6B,CAAC;IACL,CAAC;IAClC,qCAAW,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IANU,eAAe;QAD3B,gEAAU,EAAE;+EAIe,+DAAU;OAHzB,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;ACN5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n\\n  </h1>\\n  <!-- <app-data-table></app-data-table> -->\\n  <app-input-data></app-input-data>\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Assignment';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InputDataComponent } from './input-data/input-data.component';\nimport { RentDataService } from './services/rent-data-service.service';\nimport { FileService } from './services/csv-service.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n/* import { DataTableComponent } from './data-table/data-table.component';\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputDataComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatDatepickerModule,\n    MatInputModule,\n    AppRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  providers: [RentDataService/* ,FileService */],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width {\\n    width: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5wdXQtZGF0YS9pbnB1dC1kYXRhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLFlBQVk7R0FDYjs7RUFFRDtJQUNFLFlBQVk7R0FDYiIsImZpbGUiOiJzcmMvYXBwL2lucHV0LWRhdGEvaW5wdXQtZGF0YS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybSB7XG4gICAgbWluLXdpZHRoOiAxNTBweDtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfSJdfQ== */\"","module.exports = \"<h2>\\n\\n  <input #desiredate placeholder=\\\"Please enter month YYYY-MM\\\" type=\\\"text\\\" >\\n  <button (click)=\\\"getRevenue(desiredate.value)\\\">Get Revenue</button>\\n\\n</h2>\\n<div *ngIf=\\\"show\\\" class=\\\"h1\\\" >{{desiredate.value}}: expected revenue: ${{expectedRevenue|number}}, expected total capacity of\\n  the\\n  unreserved\\n  offices:{{totalCapacity}}\\n<h4>Here is the list of reserved offices:</h4>\\n  <!-- <th *ngFor=\\\"let title of displayedColumns\\\">{{title}} ; </th>\\n  <ul *ngFor=\\\"let rent  of filteredRentData\\\">\\n    <th class=\\\"h3\\\">{{rent.capacity}} ; {{rent.monthlyPrice}}; {{rent.startDay | date: 'dd-MM-yyyy'}} ; {{rent.endDay|\\n      date: 'dd-MM-yyyy'}}</th>\\n  </ul> -->\\n  <table mat-table [dataSource]=\\\"filteredRentData\\\" style='align-content: center'>\\n    <ng-container matColumnDef=\\\"capacity\\\">\\n      <th mat-header-cell *matHeaderCellDef>capacity</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.capacity}}</td>\\n      <td mat-footer-cell *matFooterCellDef> expected total capacity of the unreserved offices : {{totalCapacity}} .</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"monthlyPrice\\\">\\n      <th mat-header-cell *matHeaderCellDef>monthlyPrice</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.monthlyPrice}}</td>\\n      <td mat-footer-cell *matFooterCellDef> expected revenue is: {{expectedRevenue|number}} .</td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"startDay\\\">\\n      <th mat-header-cell *matHeaderCellDef>startDay </th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.startDay | date: 'dd-MM-yyyy' }}</td>\\n      <td mat-footer-cell *matFooterCellDef> for month {{chosenStartDate| date: 'dd/MM/yyyy'}}  until </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"endDay\\\">\\n      <th mat-header-cell *matHeaderCellDef> endDay</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.endDay | date: 'dd-MM-yyyy'}}</td>\\n      <td mat-footer-cell *matFooterCellDef>   {{chosenEndDate| date: 'dd/MM/yyyy'}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\n  </table>\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FileService } from '../services/csv-service.service';\nimport { DataTableItem } from '../interfaces/DataTableItem';\nimport { RentDataService } from '../services/rent-data-service.service';\nimport { RentDataItem } from '../interfaces/RentDataItem';\nimport { MatTableDataSource } from '@angular/material';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport * as Papa from 'papaparse';\n@Component({\n  selector: 'app-input-data',\n  templateUrl: './input-data.component.html',\n  styleUrls: ['./input-data.component.css']\n})\nexport class InputDataComponent implements OnInit {\n  chosenYear: number;\n  chosenMonth: number;\n  chosenEndDate: Date;\n  chosenStartDate: Date;\n  totalCapacity: number;\n  expectedRevenue: number;\n  data: DataTableItem[];\n  filteredData: DataTableItem[];\n  strDate: Date;\n  show: boolean;\n  displayedColumns = ['capacity', 'monthlyPrice', 'startDay', 'endDay'];\n  rentData: RentDataItem[];\n  filteredRentData: RentDataItem[];\n  @Input()\n  csvData: any;\n  JSONData: any;\n  constructor(private _rentDataService: RentDataService/* , private _csvFileService: FileService) */) { }\n\n  ngOnInit() {\n\n    this._rentDataService.getRentData().subscribe(\n      data => this.data = data)\n      ;\n    // // this._csvFileService.getCSVContent().subscribe(\n    //   data =>  this.csvData = data\n    // );\n    // this.csvData = this.getContent().then(t => this.csvData = t);\n\n    // this.JSONData = this.csvJSON(this.csvData);\n\n  }\n  async getContent() {\n    // return await this._csvFileService.getCSVContent();\n  }\n  csvJSON(lines: string) {\n    lines.split(/\\r?\\n/);\n    const result = [];\n\n    let headers = lines[0].split(',');\n    console.log(headers);\n    for (let i = 1; i < lines.length - 1; i++) {\n\n      let obj = {};\n      let currentline = lines[i].split(',');\n\n      for (let j = 0; j < headers.length; j++) {\n        obj[headers[j]] = currentline[j];\n      }\n\n      result.push(obj);\n\n    }\n    console.log(JSON.stringify(result)); //JSON\n    this.JSONData = JSON.stringify(result);\n  }\n\n  getRevenue(value: string) {\n    // debugger;\n\n    // this.JSONData = this.csvJSON(this.csvData);\n\n    //Here get input from user \n    this.chosenYear = parseInt(value.substring(0, 4), 10);\n    this.chosenMonth = parseInt(value.substr(5), 10);\n\n    // convert user string to type Date\n    this.chosenEndDate = new Date(this.chosenYear, this.chosenMonth, 0);\n    this.chosenStartDate = new Date(this.chosenYear, this.chosenMonth - 1, 1);\n\n    // get the relevant  from the records & map it to RentDataItem\n    \n    this.rentData = this.data.map(data => new RentDataItem(data.capacity, data.monthlyPrice, data.startDay, data.endDay));\n\n    // filter the data according to date in input\n\n    this.filteredRentData = this.rentData.filter(a => a.startDay <= this.chosenStartDate &&\n      (a.endDay >= this.chosenStartDate || a.endDay === undefined));\n\n    // calculate capacity\n\n    this.totalCapacity = this.data\n      .map(t => t.capacity).reduce((acc, val) => acc + val, 0) -\n      this.filteredRentData.map(t => t.capacity).reduce((acc, val) => acc + val, 0);\n\n\n\n    //calculate expected revenue (with proration)\n    this.expectedRevenue = this.filteredRentData\n      .map(t => t.endDay === undefined || t.endDay >= this.chosenEndDate ? t.monthlyPrice\n        : this.calculateProration(t.endDay, t.monthlyPrice)).reduce((acc, val) => acc + val, 0);\n    console.log(this.totalCapacity + ' ' + this.expectedRevenue);\n\n    this.show = true;\n  }\n  calculateProration(endDay: Date, monthlyPrice: number): number {\n   \n   //proration calculation\n   \n    const day = endDay.getDate();\n\n    const daysInMonth = new Date(endDay.getFullYear(), endDay.getMonth() + 1, 0).getDate();\n    console.log(endDay);\n    console.log(day + ' ' + daysInMonth);\n    return (day * monthlyPrice / daysInMonth).valueOf();\n  }\n\n\n}\n","export class RentDataItem {\n\n  capacity: number;\n  monthlyPrice: number;\n  startDay: Date;\n  endDay: Date;\n\n  constructor(capacity: number,\n    monthlyPrice: number,\n    startDay: string,\n    endDay: string) {\n    this.capacity = capacity;\n    this.monthlyPrice = monthlyPrice;\n    let date1: Date = new Date(startDay);\n    date1.setHours(0, 0, 0, 0);\n    this.startDay = date1;\n    if (endDay !== '') {\n      let date2: Date = new Date(endDay);\n      date2.setHours(0, 0, 0, 0);\n      this.endDay = date2;\n    }\n\n\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, Subject, asapScheduler, pipe, of, from, interval, merge, fromEvent } from 'rxjs';\nimport { DataTableItem } from '../interfaces/DataTableItem';\n\n@Injectable()\nexport class RentDataService {\n\n  private _url = '/assets/data/rent_data.json';\n  constructor(private http: HttpClient) { }\n  public getRentData(): Observable<DataTableItem[]> {\n    return this.http.get<DataTableItem[]>(this._url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}